#include <fstream>
#include <systemc.h>
#include <map>
#include <unordered_map>
struct MemAddrHashFunc {
  std::size_t operator() (int const& addr) const noexcept {
    return addr;
  }
};
SC_MODULE(pdp) {
  std::ofstream instr_log;
  std::ofstream instr_update_log;
  int GetInstrCntr();
  void IncrementInstrCntr();
  void LogInstrSequence(const std::string& instr_name, const long int&);
  sc_in<bool> pdp_pdp_last_input_batch_in;
  bool pdp_pdp_last_input_batch;
  sc_in<sc_biguint<16>> pdp_pdp_input_63_in;
  sc_biguint<16> pdp_pdp_input_63;
  sc_in<sc_biguint<16>> pdp_pdp_input_62_in;
  sc_biguint<16> pdp_pdp_input_62;
  sc_in<sc_biguint<16>> pdp_pdp_input_61_in;
  sc_biguint<16> pdp_pdp_input_61;
  sc_in<sc_biguint<16>> pdp_pdp_input_60_in;
  sc_biguint<16> pdp_pdp_input_60;
  sc_in<sc_biguint<16>> pdp_pdp_input_59_in;
  sc_biguint<16> pdp_pdp_input_59;
  sc_in<sc_biguint<16>> pdp_pdp_input_58_in;
  sc_biguint<16> pdp_pdp_input_58;
  sc_in<sc_biguint<16>> pdp_pdp_input_57_in;
  sc_biguint<16> pdp_pdp_input_57;
  sc_in<sc_biguint<16>> pdp_pdp_input_56_in;
  sc_biguint<16> pdp_pdp_input_56;
  sc_in<sc_biguint<16>> pdp_pdp_input_55_in;
  sc_biguint<16> pdp_pdp_input_55;
  sc_in<sc_biguint<16>> pdp_pdp_input_24_in;
  sc_biguint<16> pdp_pdp_input_24;
  sc_in<sc_biguint<16>> pdp_pdp_input_23_in;
  sc_biguint<16> pdp_pdp_input_23;
  sc_in<sc_biguint<16>> pdp_pdp_input_22_in;
  sc_biguint<16> pdp_pdp_input_22;
  sc_in<sc_biguint<16>> pdp_pdp_input_21_in;
  sc_biguint<16> pdp_pdp_input_21;
  sc_in<sc_biguint<16>> pdp_pdp_input_20_in;
  sc_biguint<16> pdp_pdp_input_20;
  sc_in<sc_biguint<16>> pdp_pdp_input_19_in;
  sc_biguint<16> pdp_pdp_input_19;
  sc_in<sc_biguint<16>> pdp_pdp_input_18_in;
  sc_biguint<16> pdp_pdp_input_18;
  sc_in<sc_biguint<16>> pdp_pdp_input_17_in;
  sc_biguint<16> pdp_pdp_input_17;
  sc_in<sc_biguint<16>> pdp_pdp_input_16_in;
  sc_biguint<16> pdp_pdp_input_16;
  sc_in<sc_biguint<16>> pdp_pdp_input_15_in;
  sc_biguint<16> pdp_pdp_input_15;
  sc_in<sc_biguint<16>> pdp_pdp_input_14_in;
  sc_biguint<16> pdp_pdp_input_14;
  sc_in<sc_biguint<16>> pdp_pdp_input_13_in;
  sc_biguint<16> pdp_pdp_input_13;
  sc_in<sc_biguint<16>> pdp_pdp_input_12_in;
  sc_biguint<16> pdp_pdp_input_12;
  sc_in<sc_biguint<16>> pdp_pdp_input_11_in;
  sc_biguint<16> pdp_pdp_input_11;
  sc_in<sc_biguint<16>> pdp_pdp_input_10_in;
  sc_biguint<16> pdp_pdp_input_10;
  sc_in<sc_biguint<16>> pdp_pdp_input_9_in;
  sc_biguint<16> pdp_pdp_input_9;
  sc_in<sc_biguint<16>> pdp_csb2pdp_addr_in;
  sc_biguint<16> pdp_csb2pdp_addr;
  sc_in<sc_biguint<32>> pdp_csb2pdp_data_in;
  sc_biguint<32> pdp_csb2pdp_data;
  sc_in<sc_biguint<1>> pdp_csb2pdp_write_in;
  sc_biguint<1> pdp_csb2pdp_write;
  sc_in<sc_biguint<1>> pdp_csb2pdp_vld_in;
  sc_biguint<1> pdp_csb2pdp_vld;
  sc_in<sc_biguint<16>> pdp_pdp_input_0_in;
  sc_biguint<16> pdp_pdp_input_0;
  sc_in<sc_biguint<16>> pdp_pdp_input_1_in;
  sc_biguint<16> pdp_pdp_input_1;
  sc_in<sc_biguint<16>> pdp_pdp_input_2_in;
  sc_biguint<16> pdp_pdp_input_2;
  sc_in<sc_biguint<16>> pdp_pdp_input_3_in;
  sc_biguint<16> pdp_pdp_input_3;
  sc_in<sc_biguint<16>> pdp_pdp_input_4_in;
  sc_biguint<16> pdp_pdp_input_4;
  sc_in<sc_biguint<16>> pdp_pdp_input_5_in;
  sc_biguint<16> pdp_pdp_input_5;
  sc_in<sc_biguint<16>> pdp_pdp_input_6_in;
  sc_biguint<16> pdp_pdp_input_6;
  sc_in<sc_biguint<16>> pdp_pdp_input_7_in;
  sc_biguint<16> pdp_pdp_input_7;
  sc_in<sc_biguint<16>> pdp_pdp_input_8_in;
  sc_biguint<16> pdp_pdp_input_8;
  sc_in<sc_biguint<16>> pdp_pdp_input_25_in;
  sc_biguint<16> pdp_pdp_input_25;
  sc_in<sc_biguint<16>> pdp_pdp_input_26_in;
  sc_biguint<16> pdp_pdp_input_26;
  sc_in<sc_biguint<16>> pdp_pdp_input_27_in;
  sc_biguint<16> pdp_pdp_input_27;
  sc_in<sc_biguint<16>> pdp_pdp_input_28_in;
  sc_biguint<16> pdp_pdp_input_28;
  sc_in<sc_biguint<16>> pdp_pdp_input_29_in;
  sc_biguint<16> pdp_pdp_input_29;
  sc_in<sc_biguint<16>> pdp_pdp_input_30_in;
  sc_biguint<16> pdp_pdp_input_30;
  sc_in<sc_biguint<16>> pdp_pdp_input_31_in;
  sc_biguint<16> pdp_pdp_input_31;
  sc_in<sc_biguint<16>> pdp_pdp_input_32_in;
  sc_biguint<16> pdp_pdp_input_32;
  sc_in<sc_biguint<16>> pdp_pdp_input_33_in;
  sc_biguint<16> pdp_pdp_input_33;
  sc_in<sc_biguint<16>> pdp_pdp_input_34_in;
  sc_biguint<16> pdp_pdp_input_34;
  sc_in<sc_biguint<16>> pdp_pdp_input_35_in;
  sc_biguint<16> pdp_pdp_input_35;
  sc_in<sc_biguint<16>> pdp_pdp_input_36_in;
  sc_biguint<16> pdp_pdp_input_36;
  sc_in<sc_biguint<16>> pdp_pdp_input_37_in;
  sc_biguint<16> pdp_pdp_input_37;
  sc_in<sc_biguint<16>> pdp_pdp_input_38_in;
  sc_biguint<16> pdp_pdp_input_38;
  sc_in<sc_biguint<16>> pdp_pdp_input_39_in;
  sc_biguint<16> pdp_pdp_input_39;
  sc_in<sc_biguint<16>> pdp_pdp_input_40_in;
  sc_biguint<16> pdp_pdp_input_40;
  sc_in<sc_biguint<16>> pdp_pdp_input_41_in;
  sc_biguint<16> pdp_pdp_input_41;
  sc_in<sc_biguint<16>> pdp_pdp_input_42_in;
  sc_biguint<16> pdp_pdp_input_42;
  sc_in<sc_biguint<16>> pdp_pdp_input_43_in;
  sc_biguint<16> pdp_pdp_input_43;
  sc_in<sc_biguint<16>> pdp_pdp_input_44_in;
  sc_biguint<16> pdp_pdp_input_44;
  sc_in<sc_biguint<16>> pdp_pdp_input_45_in;
  sc_biguint<16> pdp_pdp_input_45;
  sc_in<sc_biguint<16>> pdp_pdp_input_46_in;
  sc_biguint<16> pdp_pdp_input_46;
  sc_in<sc_biguint<16>> pdp_pdp_input_47_in;
  sc_biguint<16> pdp_pdp_input_47;
  sc_in<sc_biguint<16>> pdp_pdp_input_48_in;
  sc_biguint<16> pdp_pdp_input_48;
  sc_in<sc_biguint<16>> pdp_pdp_input_49_in;
  sc_biguint<16> pdp_pdp_input_49;
  sc_in<sc_biguint<16>> pdp_pdp_input_50_in;
  sc_biguint<16> pdp_pdp_input_50;
  sc_in<sc_biguint<16>> pdp_pdp_input_51_in;
  sc_biguint<16> pdp_pdp_input_51;
  sc_in<sc_biguint<16>> pdp_pdp_input_52_in;
  sc_biguint<16> pdp_pdp_input_52;
  sc_in<sc_biguint<16>> pdp_pdp_input_53_in;
  sc_biguint<16> pdp_pdp_input_53;
  sc_in<sc_biguint<16>> pdp_pdp_input_54_in;
  sc_biguint<16> pdp_pdp_input_54;
  sc_biguint<4> pdp_kernel_height_marker;
  sc_biguint<17> pdp_group0_pdp_d_recip_kernel_width;
  sc_biguint<4> pdp_group0_pdp_d_kernel_stride_width;
  sc_biguint<4> pdp_group0_pdp_kernel_stride_height;
  sc_biguint<4> pdp_group0_pdp_d_kernel_height;
  sc_biguint<4> pdp_group0_pdp_d_kernel_width;
  sc_biguint<10> pdp_group0_pdp_d_partial_width_out_last;
  sc_biguint<10> pdp_group0_pdp_d_partial_width_out_mid;
  sc_biguint<10> pdp_group0_pdp_d_partial_width_out_first;
  sc_biguint<10> pdp_group0_pdp_d_partial_width_in_last;
  sc_biguint<10> pdp_group0_pdp_d_partial_width_in_mid;
  sc_biguint<10> pdp_group0_pdp_d_partial_width_in_first;
  sc_biguint<1> pdp_group0_pdp_d_nan_to_zero;
  sc_biguint<8> pdp_group0_pdp_d_split_num;
  sc_biguint<1> pdp_group0_pdp_d_flying_mode;
  sc_biguint<2> pdp_group0_pdp_d_pooling_method;
  sc_biguint<13> pdp_group0_pdp_d_cube_out_channel;
  sc_biguint<1> pdp_pdp2csb_rdy;
  sc_biguint<1> pdp_pdp2csb_data_vld;
  sc_biguint<16> pdp_pdp_output;
  sc_biguint<2> pdp_pdp_s_status0;
  sc_biguint<2> pdp_pdp_s_status1;
  sc_biguint<1> pdp_pdp_s_producer;
  sc_biguint<1> pdp_pdp_s_consumer;
  sc_biguint<1> pdp_group0_pdp_d_op_en_trigger;
  sc_biguint<13> pdp_group0_pdp_d_cube_in_width;
  sc_biguint<13> pdp_group0_pdp_d_cube_in_height;
  sc_biguint<13> pdp_group0_pdp_d_cube_in_channel;
  sc_biguint<13> pdp_group0_pdp_d_cube_out_width;
  sc_biguint<13> pdp_group0_pdp_d_cube_out_height;
  sc_biguint<17> pdp_group0_pdp_d_recip_kernel_height;
  sc_biguint<3> pdp_group0_pdp_d_pad_left;
  sc_biguint<3> pdp_group0_pdp_d_pad_top;
  sc_biguint<3> pdp_group0_pdp_d_pad_right;
  sc_biguint<3> pdp_group0_pdp_d_pad_bottom;
  sc_biguint<19> pdp_group0_pdp_d_pad_value_1x;
  sc_biguint<19> pdp_group0_pdp_d_pad_value_2x;
  sc_biguint<19> pdp_group0_pdp_d_pad_value_3x;
  sc_biguint<19> pdp_group0_pdp_d_pad_value_4x;
  sc_biguint<19> pdp_group0_pdp_d_pad_value_5x;
  sc_biguint<19> pdp_group0_pdp_d_pad_value_6x;
  sc_biguint<19> pdp_group0_pdp_d_pad_value_7x;
  sc_biguint<27> pdp_group0_pdp_d_src_base_addr_low;
  sc_biguint<32> pdp_group0_pdp_d_src_base_addr_high;
  sc_biguint<27> pdp_group0_pdp_d_src_line_stride;
  sc_biguint<27> pdp_group0_pdp_d_src_surface_stride;
  sc_biguint<27> pdp_group0_pdp_d_dst_base_addr_low;
  sc_biguint<32> pdp_group0_pdp_d_dst_base_addr_high;
  sc_biguint<27> pdp_group0_pdp_d_dst_line_stride;
  sc_biguint<27> pdp_group0_pdp_d_dst_surface_stride;
  sc_biguint<1> pdp_group0_pdp_d_dst_ram_type;
  sc_biguint<2> pdp_group0_pdp_d_input_data;
  sc_biguint<32> pdp_group0_pdp_d_inf_input_num;
  sc_biguint<32> pdp_group0_pdp_d_nan_input_num;
  sc_biguint<32> pdp_group0_pdp_d_nan_output_num;
  sc_biguint<1> pdp_group0_pdp_d_dma_en;
  sc_biguint<32> pdp_group0_pdp_d_perf_write_stall;
  sc_biguint<3> pdp_pdp_state;
  sc_biguint<16> pdp_pdp_padding_value;
  sc_biguint<2> pdp_pdp_pooling_stage_split_width;
  void compute();
  bool decode_pdp_avg_pool();
  bool decode_pdp_load_prepooling_variables();
  bool decode_pdp_max_pool();
  bool decode_pdp_min_pool();
  bool decode_pdp_pdp_start_to_load();
  bool decode_pdp_set_cube_in_channel();
  bool decode_pdp_set_cube_in_height();
  bool decode_pdp_set_cube_in_width();
  bool decode_pdp_set_cube_out_channel();
  bool decode_pdp_set_cube_out_height();
  bool decode_pdp_set_cube_out_width();
  bool decode_pdp_set_destination_address_high();
  bool decode_pdp_set_destination_address_low();
  bool decode_pdp_set_destination_line_stride();
  bool decode_pdp_set_destination_surface_stride();
  bool decode_pdp_set_infinity_input_number();
  bool decode_pdp_set_input_data_format();
  bool decode_pdp_set_kernel_height_reciprocal();
  bool decode_pdp_set_kernel_width_height();
  bool decode_pdp_set_kernel_width_reciprocal();
  bool decode_pdp_set_nan_flush_to_zero();
  bool decode_pdp_set_nan_input_number();
  bool decode_pdp_set_nan_output_number();
  bool decode_pdp_set_padding_size();
  bool decode_pdp_set_padding_value_1x();
  bool decode_pdp_set_padding_value_2x();
  bool decode_pdp_set_padding_value_3x();
  bool decode_pdp_set_padding_value_4x();
  bool decode_pdp_set_padding_value_5x();
  bool decode_pdp_set_padding_value_6x();
  bool decode_pdp_set_padding_value_7x();
  bool decode_pdp_set_partial_width_in();
  bool decode_pdp_set_partial_width_out();
  bool decode_pdp_set_perf_count_enable();
  bool decode_pdp_set_perf_write_stall();
  bool decode_pdp_set_producer();
  bool decode_pdp_set_ram_type();
  bool decode_pdp_set_source_address_high();
  bool decode_pdp_set_source_address_low();
  bool decode_pdp_set_source_line_stride();
  bool decode_pdp_set_source_surface_stride();
  bool decode_pdp_set_split_number();
  bool decode_pdp_set_start_group0();
  void setup_initial_condition();
  void update_pdp_avg_pool();
  void update_pdp_load_prepooling_variables();
  void update_pdp_max_pool();
  void update_pdp_min_pool();
  void update_pdp_pdp_start_to_load();
  void update_pdp_set_cube_in_channel();
  void update_pdp_set_cube_in_height();
  void update_pdp_set_cube_in_width();
  void update_pdp_set_cube_out_channel();
  void update_pdp_set_cube_out_height();
  void update_pdp_set_cube_out_width();
  void update_pdp_set_destination_address_high();
  void update_pdp_set_destination_address_low();
  void update_pdp_set_destination_line_stride();
  void update_pdp_set_destination_surface_stride();
  void update_pdp_set_infinity_input_number();
  void update_pdp_set_input_data_format();
  void update_pdp_set_kernel_height_reciprocal();
  void update_pdp_set_kernel_width_height();
  void update_pdp_set_kernel_width_reciprocal();
  void update_pdp_set_nan_flush_to_zero();
  void update_pdp_set_nan_input_number();
  void update_pdp_set_nan_output_number();
  void update_pdp_set_padding_size();
  void update_pdp_set_padding_value_1x();
  void update_pdp_set_padding_value_2x();
  void update_pdp_set_padding_value_3x();
  void update_pdp_set_padding_value_4x();
  void update_pdp_set_padding_value_5x();
  void update_pdp_set_padding_value_6x();
  void update_pdp_set_padding_value_7x();
  void update_pdp_set_partial_width_in();
  void update_pdp_set_partial_width_out();
  void update_pdp_set_perf_count_enable();
  void update_pdp_set_perf_write_stall();
  void update_pdp_set_producer();
  void update_pdp_set_ram_type();
  void update_pdp_set_source_address_high();
  void update_pdp_set_source_address_low();
  void update_pdp_set_source_line_stride();
  void update_pdp_set_source_surface_stride();
  void update_pdp_set_split_number();
  void update_pdp_set_start_group0();
  bool valid_pdp();
  SC_HAS_PROCESS(pdp);
  pdp(sc_module_name name_) : sc_module(name_) {
    SC_METHOD(compute);
    sensitive << pdp_pdp_last_input_batch_in << pdp_pdp_input_63_in << pdp_pdp_input_62_in << pdp_pdp_input_61_in << pdp_pdp_input_60_in << pdp_pdp_input_59_in << pdp_pdp_input_58_in << pdp_pdp_input_57_in << pdp_pdp_input_56_in << pdp_pdp_input_55_in << pdp_pdp_input_24_in << pdp_pdp_input_23_in << pdp_pdp_input_22_in << pdp_pdp_input_21_in << pdp_pdp_input_20_in << pdp_pdp_input_19_in << pdp_pdp_input_18_in << pdp_pdp_input_17_in << pdp_pdp_input_16_in << pdp_pdp_input_15_in << pdp_pdp_input_14_in << pdp_pdp_input_13_in << pdp_pdp_input_12_in << pdp_pdp_input_11_in << pdp_pdp_input_10_in << pdp_pdp_input_9_in << pdp_csb2pdp_addr_in << pdp_csb2pdp_data_in << pdp_csb2pdp_write_in << pdp_csb2pdp_vld_in << pdp_pdp_input_0_in << pdp_pdp_input_1_in << pdp_pdp_input_2_in << pdp_pdp_input_3_in << pdp_pdp_input_4_in << pdp_pdp_input_5_in << pdp_pdp_input_6_in << pdp_pdp_input_7_in << pdp_pdp_input_8_in << pdp_pdp_input_25_in << pdp_pdp_input_26_in << pdp_pdp_input_27_in << pdp_pdp_input_28_in << pdp_pdp_input_29_in << pdp_pdp_input_30_in << pdp_pdp_input_31_in << pdp_pdp_input_32_in << pdp_pdp_input_33_in << pdp_pdp_input_34_in << pdp_pdp_input_35_in << pdp_pdp_input_36_in << pdp_pdp_input_37_in << pdp_pdp_input_38_in << pdp_pdp_input_39_in << pdp_pdp_input_40_in << pdp_pdp_input_41_in << pdp_pdp_input_42_in << pdp_pdp_input_43_in << pdp_pdp_input_44_in << pdp_pdp_input_45_in << pdp_pdp_input_46_in << pdp_pdp_input_47_in << pdp_pdp_input_48_in << pdp_pdp_input_49_in << pdp_pdp_input_50_in << pdp_pdp_input_51_in << pdp_pdp_input_52_in << pdp_pdp_input_53_in << pdp_pdp_input_54_in;
  }
};
